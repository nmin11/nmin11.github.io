<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cdk on 로코</title>
    <link>https://nmin11.github.io/kr/tags/cdk/</link>
    <description>Recent content in Cdk on 로코</description>
    <generator>Hugo</generator>
    <language>kr</language>
    <lastBuildDate>Sat, 12 Aug 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nmin11.github.io/kr/tags/cdk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AWS CDK는 은탄환이 아니다</title>
      <link>https://nmin11.github.io/kr/tech/3-aws-cdk-is-not-a-silver-bullet/</link>
      <pubDate>Sat, 12 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://nmin11.github.io/kr/tech/3-aws-cdk-is-not-a-silver-bullet/</guid>
      <description>&lt;h2 id=&#34;tldr-notion-ai가-작성해준-글&#34;&gt;TL;DR (Notion AI가 작성해준 글)&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;AWS CDK(클라우드 개발 키트)는 코드형 인프라(IaC) 개발을 위해 널리 사용되고 있지만, 모든 사용 사례에 적합한 솔루션은 아니라는 점에 유의해야 합니다.&lt;/p&gt;&#xA;&lt;p&gt;첫째, 많은 사용자 정의가 필요하지 않은 소규모 프로젝트나 간단한 인프라 설정에는 AWS CDK가 최선의 선택이 아닐 수 있습니다. 이러한 경우에는 더 간단한 IaC 도구를 사용하거나 AWS 콘솔에서 직접 코드를 작성하는 것이 더 효율적일 수 있습니다.&lt;/p&gt;&#xA;&lt;p&gt;둘째, AWS CDK는 인프라 정의를 위한 높은 수준의 객체 지향 추상화를 제공하지만, 특정 상황에서는 복잡성을 증가시킬 수도 있습니다. 개발자는 AWS CDK가 제공하는 유연성과 이로 인해 발생할 수 있는 추가 복잡성 사이의 장단점을 신중하게 고려해야 합니다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
