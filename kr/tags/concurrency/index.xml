<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Concurrency on 로코</title>
    <link>http://localhost:1313/kr/tags/concurrency/</link>
    <description>Recent content in Concurrency on 로코</description>
    <generator>Hugo</generator>
    <language>kr</language>
    <lastBuildDate>Tue, 01 Jul 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/kr/tags/concurrency/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Java 동시성의 변천사</title>
      <link>http://localhost:1313/kr/blog/5-the-evolution-of-concurrency-in-java/</link>
      <pubDate>Tue, 01 Jul 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/kr/blog/5-the-evolution-of-concurrency-in-java/</guid>
      <description>&lt;h2 id=&#34;0-서론&#34;&gt;0. 서론&lt;/h2&gt;&#xA;&lt;p&gt;최근에 항해 플러스 백엔드 8기 과정을 진행하면서 많은 지식들을 흡수하고 있다.&lt;br&gt;&#xA;특히 동일한 자원에 여러 스레드가 동시에 접근할 때 생기는 &lt;strong&gt;동시성 이슈&lt;/strong&gt;는, 부끄럽게도 여태 생각조차 해보지 못한 중요한 학습 포인트였다.&lt;br&gt;&#xA;사실 부트캠프 과정 중에 이미 DB 락과 분산 락을 적용해보면서, 동시성을 제어하는 방법 자체는 충분히 깨달을 수 있었다.&lt;br&gt;&#xA;하지만 문제를 해결하는 방법 자체에만 집중하기 보다는 조금 더 깊이 이해해보는 것이 좋겠다는 생각이 들었다.&lt;br&gt;&#xA;&lt;strong&gt;동시성 프로그래밍&lt;/strong&gt;이라는 것이 무엇인지, 또 Java 진영에서 동시성을 제어하기 위한 방법들이 어떻게 발전해왔는지 살펴보면 더 나은 학습 경험이 될 것이다.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
