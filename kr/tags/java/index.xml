<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on 로코</title>
    <link>https://nmin11.github.io/kr/tags/java/</link>
    <description>Recent content in Java on 로코</description>
    <generator>Hugo</generator>
    <language>kr</language>
    <lastBuildDate>Thu, 14 Mar 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://nmin11.github.io/kr/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>주요 GC 알고리즘들</title>
      <link>https://nmin11.github.io/kr/tech/4-major-gc-algorithms/</link>
      <pubDate>Thu, 14 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://nmin11.github.io/kr/tech/4-major-gc-algorithms/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;『자바 최적화』 스터디를 하면서 주요 GC 알고리즘들에 대해 더 깊이 공부하고자 작성한 글입니다.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;serial-gc&#34;&gt;Serial GC&lt;/h2&gt;&#xA;&lt;img src=&#34;https://github.com/nmin11/blog/assets/75058239/2a864abb-d0f9-4371-a7ea-e86db324af71&#34; width=300&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;가장 단순한 GC 구현체&lt;/li&gt;&#xA;&lt;li&gt;STW(Stop-The-World) 이후 한 개의 스레드에서만 GC 수행&lt;/li&gt;&#xA;&lt;li&gt;mark-sweep-compact 알고리즘 사용&lt;/li&gt;&#xA;&lt;li&gt;멀티 스레드 환경에서는 부적합&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;❖ Serial GC 활성화 플래그&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java -XX:+UseSerialGC&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;parallel-gc&#34;&gt;Parallel GC&lt;/h2&gt;&#xA;&lt;img src=&#34;https://github.com/nmin11/blog/assets/75058239/fbf491b0-e50e-4c8d-91c1-2908a363b0d1&#34; width=400&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;자바 5 ~ 8까지 디폴트 GC&lt;/li&gt;&#xA;&lt;li&gt;GC 처리율을 최대화하기 때문에 &lt;em&gt;Throughput Collector&lt;/em&gt; 라고도 불림&lt;/li&gt;&#xA;&lt;li&gt;메모리 공간이 충분하고 코어 개수가 많을 때 유리한 알고리즘&lt;/li&gt;&#xA;&lt;li&gt;플래그를 통해 GC에 사용할 최대 스레드 수, 최대 중단 시간, GC 수행 시간 비율을 설정할 수 있음&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;-XX:ParallelGCThreads=&amp;lt;N&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;-XX:MaxGCPauseMillis=&amp;lt;N&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;-XX:GCTimeRatio=&amp;lt;N&amp;gt;&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;❖ Parallel GC 활성화 플래그&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
