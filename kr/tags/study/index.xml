<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>study on 로코</title>
    <link>https://nmin11.github.io/kr/tags/study/</link>
    <description>Recent content in study on 로코</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 14 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://nmin11.github.io/kr/tags/study/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>주요 GC 알고리즘들</title>
      <link>https://nmin11.github.io/kr/blog/4-major-gc-algorithms/</link>
      <pubDate>Thu, 14 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://nmin11.github.io/kr/blog/4-major-gc-algorithms/</guid>
      <description>『자바 최적화』 스터디를 하면서 주요 GC 알고리즘들에 대해 더 깊이 공부하고자 작성한 글입니다.
Serial GC 가장 단순한 GC 구현체 STW(Stop-The-World) 이후 한 개의 스레드에서만 GC 수행 mark-sweep-compact 알고리즘 사용 멀티 스레드 환경에서는 부적합 ❖ Serial GC 활성화 플래그
java -XX:+UseSerialGC Parallel GC 자바 5 ~ 8까지 디폴트 GC GC 처리율을 최대화하기 때문에 Throughput Collector 라고도 불림 메모리 공간이 충분하고 코어 개수가 많을 때 유리한 알고리즘 플래그를 통해 GC에 사용할 최대 스레드 수, 최대 중단 시간, GC 수행 시간 비율을 설정할 수 있음 -XX:ParallelGCThreads=&amp;lt;N&amp;gt; -XX:MaxGCPauseMillis=&amp;lt;N&amp;gt; -XX:GCTimeRatio=&amp;lt;N&amp;gt; ❖ Parallel GC 활성화 플래그</description>
    </item>
    
  </channel>
</rss>
